#!/usr/bin/bash
#
#########################################
# Author: [shaopei](https://github.com/shaopei)
# File: proseq2.0.bsh
# Source: https://github.com/Danko-Lab/proseq2.0/blob/master/proseq2.0.bsh
# Source+commit: https://github.com/Danko-Lab/proseq2.0/blob/e306ae4722639cf44b0074cbdf1285e53a0ae9e7/proseq2.0.bsh
# Download Date: 2024-03-28, commit: f07ade2
# This source code is licensed under the BSD 2-Clause license
#########################################

#############################################
## Write out the bigWigs.
echo "SE"
echo "Writing bigWigs:"
echo ${prefix} >${prefix}.align.log

# in SE, MAP5 alwasys TRUE

#if [[ "\${RNA5}" == "R1_5prime" && "\${OPP}" == "FALSE" ]] ; then ## report The 5 prime end of the RNA.   #like GRO-seq
if [[ "$assay_type" == "GROseq" ]]; then
    bedtools bamtobed -i $bam_file 2>kill.warnings | awk -f ${moduleDir}/bin/se_1.awk | gzip >${prefix}.bed.gz
    #elif [[ "\${RNA3}" == "R1_5prime" && "\${OPP}" == "TRUE" ]] ; then  #like PRO-seq
elif [[ "$assay_type" == "PROseq" ]]; then
    bedtools bamtobed -i $bam_file 2>kill.warnings | awk -f ${moduleDir}/bin/se_2.awk | gzip >${prefix}.bed.gz
fi

echo 'Number of mappable reads:' >>${prefix}.align.log
readCount=`zcat ${prefix}.bed.gz | grep "" -c`
echo \${readCount} >>${prefix}.align.log

## Remove rRNA and reverse the strand (PRO-seq).
zcat ${prefix}.bed.gz | grep "rRNA\|chrM" -v | grep "_" -v | sort-bed - | gzip >${prefix}.nr.rs.bed.gz
echo 'Number of mappable reads (excluding rRNA):' >>${prefix}.align.log
echo `zcat ${prefix}.nr.rs.bed.gz | grep "" -c` >>${prefix}.align.log

## Convert to bedGraph ... Cannot gzip these, unfortunately.
bedtools genomecov -bg -i ${prefix}.nr.rs.bed.gz -g ${sizes} -strand + >${prefix}_plus.bedGraph
bedtools genomecov -bg -i ${prefix}.nr.rs.bed.gz -g ${sizes} -strand - >${prefix}_minus.noinv.bedGraph

## Invert minus strand.
cat ${prefix}_minus.noinv.bedGraph | awk -f ${moduleDir}/bin/se_3.awk >${prefix}_minus.bedGraph ## Invert read counts on the minus strand.

## normalized by RPM
cat ${prefix}_plus.bedGraph | awk -f ${moduleDir}/bin/se_4.awk -v readCount="\$readCount" >${prefix}_plus.rpm.bedGraph
cat ${prefix}_minus.bedGraph | awk -f ${moduleDir}/bin/se_4.awk -v readCount="\$readCount" >${prefix}_minus.rpm.bedGraph
## Then to bigWig (nomalized and non-nomrmalized ones)
bedGraphToBigWig ${prefix}_plus.rpm.bedGraph ${sizes} ${prefix}_plus.rpm.bw
bedGraphToBigWig ${prefix}_minus.rpm.bedGraph ${sizes} ${prefix}_minus.rpm.bw
bedGraphToBigWig ${prefix}_plus.bedGraph ${sizes} ${prefix}_plus.bw
bedGraphToBigWig ${prefix}_minus.bedGraph ${sizes} ${prefix}_minus.bw
